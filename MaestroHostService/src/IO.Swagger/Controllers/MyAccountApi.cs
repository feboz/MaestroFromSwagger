/*
 * MaestroHostService
 *
 * This is the Host API for Maestro System
 *
 * OpenAPI spec version: 1.0.0
 * Contact: febo74@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class MyAccountApiController : Controller
    { 
        /// <summary>
        /// returns logged user account
        /// </summary>
        /// <remarks>Returns the account, authorizations, teams and projecs of the current logged user. </remarks>
        /// <response code="200">OK</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="500">Internal server error</response>
        [HttpGet]
        [Route("/TheEdgeCompany/MaestroHostService/1.0.0/myAccount")]
        [ValidateModelState]
        [SwaggerOperation("GetMyAccount")]
        [SwaggerResponse(statusCode: 200, type: typeof(UserAccountResponse), description: "OK")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Bad request")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal server error")]
        public virtual IActionResult GetMyAccount()
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(UserAccountResponse));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ErrorResponse));

            string exampleJson = null;
            exampleJson = "{\n  \"data\" : {\n    \"assignedProjects\" : \"\",\n    \"userAccount\" : {\n      \"person\" : {\n        \"firstName\" : \"firstName\",\n        \"lastName\" : \"lastName\",\n        \"zipCode\" : \"zipCode\",\n        \"country\" : \"country\",\n        \"address\" : \"address\",\n        \"officePhone\" : \"officePhone\",\n        \"city\" : \"city\",\n        \"description\" : \"description\",\n        \"personId\" : 6,\n        \"company\" : \"company\",\n        \"cellPhone\" : \"cellPhone\",\n        \"eMail\" : \"eMail\"\n      },\n      \"user\" : {\n        \"userType\" : { },\n        \"isDisabled\" : \"isDisabled\",\n        \"login\" : \"login\",\n        \"userId\" : 0,\n        \"passwordHash\" : \"passwordHash\",\n        \"lastPasswordChanged\" : \"2000-01-23T04:56:07.000+00:00\"\n      }\n    },\n    \"assignedTeams\" : \"\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<UserAccountResponse>(exampleJson)
            : default(UserAccountResponse);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Update the password for the current user.</remarks>
        /// <param name="password">The hashed password for the logged user.</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="500">Internal server error</response>
        [HttpPut]
        [Route("/TheEdgeCompany/MaestroHostService/1.0.0/myAccount/password")]
        [ValidateModelState]
        [SwaggerOperation("PutMyAccountPassword")]
        [SwaggerResponse(statusCode: 400, type: typeof(ErrorResponse), description: "Bad request")]
        [SwaggerResponse(statusCode: 500, type: typeof(ErrorResponse), description: "Internal server error")]
        public virtual IActionResult PutMyAccountPassword([FromBody]string password)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400, default(ErrorResponse));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500, default(ErrorResponse));


            throw new NotImplementedException();
        }
    }
}
